# Sorcha Configuration File
# This configuration file will set up Sorcha to simulate what the DES would discover.
# The current DES sim has uncertainties, randomisation, vignetting and 
# trailing losses turned off by default.


[INPUT]

# The simulation used for the ephemeris input. 
# ar=ASSIST+REBOUND interal ephemeris generation 
# external=providing an external input file from the command line
# Options: "ar", "external"
ephemerides_type = ar

# Format for ephemeris simulation input file if a file is specified at the command line. 
# This is also the format to which ephemeris files will be written out, if specified.
# Options: csv, whitespace, hdf5
eph_format = csv

# Sorcha chunk size: how many objects should be processed at once?
size_serial_chunk = 20000

# Format for the orbit, physical parameters, and complex physical parameters input files.
# Options: csv or whitespace
aux_format = csv

# SQL query for extracting data from the pointing database.
pointing_sql_query = SELECT observationId, observationMidpointMJD as observationMidpointMJD_TAI , visitExposureTime, filter, fiveSigmaDepth as fieldFiveSigmaDepth_mag , fieldRA as fieldRA_deg, fieldDec as fieldDec_deg, c, k FROM observations order by observationId


[SIMULATION]
# Configuration for running the ASSIST+REBOUND ephemerides generator.

# the field of view of our search field, in degrees
ar_ang_fov = 1.3

# the buffer zone around the field of view we want to include, in degrees
ar_fov_buffer = 0.2

# the "picket" is our imprecise discretization of time that allows us to move progress
# our simulations forward without getting too granular when we don't have to.
# the unit is number of days.
ar_picket = 1

# the obscode is the MPC observatory code for the provided telescope.
ar_obs_code = W84

# the order of healpix which we will use for the healpy portions of the code.
# the nside is equivalent to 2**ar_healpix_order
ar_healpix_order = 6


[FILTERS]

# Filters of the observations you are interested in, comma-separated.
# Your physical parameters file must have H calculated in one of these filters
# and colour offset columns defined relative to that filter.
observing_filters = r,g,i,z


[SATURATION]

# Upper magnitude limit on sources that will overfill the detector pixels/have
# counts above the non-linearity regime of the pixels where one canâ€™t do 
# photometry. Objects brighter than this limit (in magnitude) will be cut. 
# Comment out for no saturation limit.
# Two formats are accepted:
# Single float: applies same saturation limit to observations in all filters.
# Comma-separated list of floats: applies saturation limit per filter, in order as
# given in observing_filters keyword.
bright_limit = 18.0


[PHASECURVES]

# The phase function used to calculate apparent magnitude. The physical parameters input
# file must contain the columns needed to calculate the phase function.
# Options: HG, HG1G2, HG12, linear, none.
phase_function = none

[FOV]

# Choose between circular, full camera footprint or the camera footprint per observation.
# Options: circle, footprint, visits_footprint.
camera_model = visits_footprint


# the query needed for the visits footprint file. must include the ccd corners and centres, the detectors Id and the limiting mag. There will be a notebook that creates this in the future.
visits_query = SELECT llcra, llcdec, lrcra, lrcdec, urcra, urcdec, ulcra, ulcdec, ra as ra_centre, dec as dec_centre, detectorID, magLim as limMag_perChip  FROM observations WHERE visitId = ?



[FADINGFUNCTION]

# Uses probability calculation from Bernardinelli et al (2022)
# For DES, calculation is done per observation and so only need to turn fading function on with no parameters needed.
# pointing sqlite database must include constants c and k. (can be seen in pointing_sql_query in the INPUT section.)
fading_function_on = True


[LINKINGFILTER]
# For DES a single detection was considered a tracklet detection and 
# a minimum of 7 unique nights of detection are needed to classify an object over the entire survey time.
# a Discovery Filter is used for more specific requirements for discovering objects with DES. see Bernardinelli et al (2022)
des_discovery_on = True


# distance (au) and motion (deg/day) cuts for detecting objects in DES:
# Bernardinelli et al (2022) used 29 < d < 2500 au, for the detection of TNOs with DES
; distance_cut_upper = 2500
; distance_cut_lower = 29

; motion_cut_upper = 
; motion_cut_lower = 

[OUTPUT]

# Output format of the output file[s]
# Options: csv, sqlite3, hdf5
output_format = csv

# Controls which columns are in the output files.
# Options are "basic" and "all", which returns all columns.
; output_columns =ObjID, fieldMJD_TAI, fieldRA_deg, fieldDec_deg, RA_deg, Dec_deg,  optFilter, trailedSourceMag,  fiveSigmaDepth_mag, phase_deg, Range_LTC_km, RangeRate_LTC_km_s, Obj_Sun_LTC_km
output_columns = all
# currently removed trailedSourceMagSigma, astrometricSigma_deg,

[LIGHTCURVE]

# The unique name of the lightcurve model to use. Defined in the ``name_id`` method 
# of the subclasses of AbstractLightCurve. If not none, the complex physical parameters 
# file must be specified at the command line.
lc_model = none


[ACTIVITY]

# The unique name of the actvity model to use. Defined in the ``name_id`` method
#  of the subclasses of AbstractCometaryActivity.  If not none, a complex physical parameters 
# file must be specified at the command line.
comet_activity = none



